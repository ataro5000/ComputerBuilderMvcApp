@page
@model MyOrdersModel 

@{
    ViewData["Title"] = "My Orders";
}

<div class="my-orders-page">
    <h2 class="mb-4">@ViewData["Title"]</h2>
    <hr />

    @if (!Model.Orders.Any())
    {
        <div class="alert alert-info" role="alert">
            You have not placed any orders yet.
        </div>
    }
    else
    {
        <div class="accordion orders-accordion" id="ordersAccordion"> 
            @foreach (var order in Model.Orders) 
            {
                <div class="accordion-item mb-3"> 
                    <h2 class="accordion-header" id="heading-@order.OrderId">
                        <span class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-@order.OrderId" aria-expanded="false" aria-controls="collapse-@order.OrderId">
                            <div class="d-flex w-100 justify-content-between">
                                <span class="order-summary-item"><strong>Order #@order.OrderId</strong></span>
                                <span class="order-summary-item">Placed: @order.OrderDate.ToString("yyyy-MM-dd HH:mm")</span>
                                <span class="order-summary-item">Status: <span class="badge status-badge bg-@(GetStatusBadgeClass(order.Status))">@order.Status</span>
                                <span class="order-summary-item">Total: <strong>@order.TotalAmount.ToString("C")</strong></span>
                            </div>
                        </span>
                    </h2>
                    <div id="collapse-@order.OrderId" class="accordion-collapse collapse" aria-labelledby="heading-@order.OrderId" data-bs-parent="#ordersAccordion">
                        <div class="accordion-body">
                            <div class="row">
                                <div class="col-md-6 order-details-column"> 
                                    <h5>Order Details</h5>
                                    <p class="left"><strong>Shipping Address:</strong><br /> @Html.Raw(order.ShippingAddress?.Replace(", ", "<br />"))</p>
                                </div>
                                <div class="col-md-6 order-items-column"> 
                                    <h6>Items:</h6>
                                    @if (order.OrderItems != null && order.OrderItems.Any())
                                    {
                                        <ul class="list-group list-group-flush mb-3 order-items-list"> 
                                            @foreach (var item in order.OrderItems)
                                            {
                                                <li class="list-group-item d-flex justify-content-between align-items-center px-0">
                                                    <div class="item-info">
                                                        <strong>@(item.Component?.Name ?? "N/A")</strong>
                                                        <small class="text-muted d-block"> (Quantity: @item.Quantity)</small>
                                                    </div>
                                                    <span class="text-end item-price">@((item.UnitPrice * item.Quantity).ToString("C"))</span> 
                                                </li>
                                            }
                                        </ul>
                                    }
                                    else
                                    {
                                        <p class="text-muted">No items found for this order.</p>
                                    }
                                    <p class="left text-end fs-5"><strong class="order-total-strong">Order Total: @order.TotalAmount.ToString("C")</strong></p> 
                                </div>
                            </div>
                            
                            <div class="mt-3 order-actions-container"> 
                                @if (order.Status == OrderStatus.Pending || order.Status == OrderStatus.Processing)
                                {
                                    <form method="post" asp-page-handler="CancelOrder" class="d-inline">
                                        <input type="hidden" name="orderId" value="@order.OrderId" />
                                        @Html.AntiForgeryToken()
                                        <button type="submit" class="btn btn-custom-danger" onclick="return confirm('Are you sure you want to cancel this order?');"> 
                                            <i class="fas fa-times-circle me-1"></i>Cancel Order
                                        </button>
                                    </form>
                                }

                                @if (order.Status == OrderStatus.Pending) 
                                {
                                    <form method="post" asp-page-handler="ModifyOrder" class="d-inline ms-2">
                                        <input type="hidden" name="orderId" value="@order.OrderId" />
                                        @Html.AntiForgeryToken()
                                        <button type="submit" class="btn btn-custom-warning"> 
                                            <i class="fas fa-edit me-1"></i>Modify Order
                                        </button>
                                    </form>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@functions {
    public string GetStatusBadgeClass(OrderStatus status)
    {
        return status switch
        {
            OrderStatus.Pending => "secondary",
            OrderStatus.Processing => "info",
            OrderStatus.Shipped => "primary",
            OrderStatus.Delivered => "success",
            OrderStatus.Cancelled => "danger",
            _ => "light",
        };
    }
}
